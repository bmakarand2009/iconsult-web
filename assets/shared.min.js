/*! iconsult 12-03-2014 version: 1.0.0 
 author: https://twitter.com/MakBkar */

var Application = Application || {};

Application.shared = angular.module("iconsult.shared", [ "fundoo.services", "ui.bootstrap" ]);

Application.shared.value("genericModules", {
    deleteDialog: "/shared/generic.delete.html",
    deleteDialogTitle: "Confirm Delete",
    dateDialog: "/shared/generic.dateDialog.html"
}).value("toastr", window.toastr);

/******** start of sevices.js******/
Application.shared.factory("RestMaster", [ "$resource", "$location", "$state", "$timeout", "$cookieStore", "appConstants", function($resource, $location, $state, $timeout, $cookieStore, appConstants) {
    // return $resource('/FACTURA-T/suppliers/saveSupplier/:id');
    var authCode = "uninit";
    var getAuthToken = function() {
        authCode = $cookieStore.get("authCode");
    }();
    var getResource = function() {
        var url = appConstants.baseUrl + "rest/:entityName/:id?token=:token";
        return $resource(url, {
            entityName: "@entityName",
            id: "@id.clean",
            token: "@token"
        }, {
            update: {
                method: "PUT"
            }
        });
    };
    return {
        updateAuthCode: function(aCode) {
            authCode = aCode;
        },
        createRecord: function(aEntity, record, viewState) {
            return getResource().save({
                entityName: aEntity,
                token: authCode
            }, record, function(response) {
                //$location.path(viewUrl);
                $state.go(viewState);
            }, function(response) {
                throw "Exception Occured in createRecord() ::" + response.error + response.status;
            });
        },
        updateRecord: function(aEntity, aId, curRec, viewState) {
            return getResource().update({
                entityName: aEntity,
                id: aId,
                token: authCode,
                curEntity: curRec
            }, function(response) {
                //$location.path(viewUrl+aId);
                $state.go(viewState);
            });
        },
        getRecord: function(aEntity, aId) {
            return getResource().get({
                entityName: aEntity,
                id: aId,
                token: authCode
            });
        },
        listRecords: function(aEntity) {
            console.log("alert calling listrecords" + authCode);
            return getResource().query({
                entityName: aEntity,
                token: authCode
            });
        },
        delRecFromList: function(aEntity, aId, records, index) {
            return getResource().remove({
                ids: aId,
                entityName: aEntity,
                token: authCode
            }, function(response) {
                if (index > 0) records.splice(index, 1);
            });
        },
        delRecord: function(aEntity, aId, listState) {
            return getResource().remove({
                entityName: aEntity,
                ids: aId,
                token: authCode
            }, function(response) {
                //$location.path(listUrl);
                $state.go(listState);
            }, function(response) {
                throw "Exception Occured in delete()" + response.status;
            });
        },
        bulkDelete: function(aEntity, selectedItems) {
            var selIds = selectedItems.join(",");
            return getResource().remove({
                entityName: aEntity,
                ids: selIds,
                token: authCode
            });
        },
        delRowFromDataTable: function(aEntity, aId, dtable) {
            return getResource().remove({
                ids: aId,
                entityName: aEntity,
                token: authCode
            }, function(response) {
                $timeout(function() {
                    dtable.fnClearTable();
                }, 300);
            });
        }
    };
} ]);

// variable sharing among controllers
Application.shared.factory("tableDataService", [ "appConstants", function(appConstants) {
    var candOptions = {
        bProcessing: true,
        bJQueryUI: true,
        sPaginationType: "full_numbers",
        iDisplayLength: 5,
        //this would be the params.max value
        // bInfo : true,
        bFilter: true,
        aoColumns: [ {
            aTargets: [ "mycol1" ],
            mData: "id",
            mRender: function(id, type, full) {
                return '<span ><input type="checkbox" ng-click="isChkBoxSelected(' + id + ') " ng-model="checkedRows[' + id + ']" ></span> ';
            }
        }, {
            mData: "name",
            aTargets: [ "mycol2" ],
            mRender: function(name, type, full) {
                //return  '<a href="'+name+'">' + name  + '</a>'
                return '<a ui-sref="Vendors.view({id:' + full.id + '})"><h4>' + name + "</h4></a>                                    <p>" + name + "<span> commision</span></p>          						   <p>Company : {{user.commissionPercentage}} </p>";
            }
        } ],
        fnRowCallback: function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            jQuery("td:eq(0)", nRow).addClass("aligncenter");
            jQuery("td:eq(1),td:eq(2)", nRow).addClass("avo-light");
        },
        oTableTools: {
            sRowSelect: "multi",
            aButtons: [ "select_all", "select_none" ]
        },
        aaData: []
    };
    return {
        getOTableOptions: function(entName) {
            if (entName == appConstants.vendEntity) {
                return candOptions;
            }
        }
    };
} ]);

"use strict";

/* LIST SUPPLIERS PAGE */
Application.shared.controller("RecListController", [ "$scope", "$location", "$timeout", "RestMaster", "entDetails", function($scope, $location, $timeout, RestMaster, entDetails) {
    $scope.init = function() {
        $scope.isSelectAll = false;
        $scope.disabledel = true;
        $scope.records = RestMaster.listRecords(entDetails.name);
    }();
    $scope.deleteRec = function(curRecord, index) {
        var r = confirm("Delete Record with ID-> " + curRecord.id);
        $scope.statusMessage = "";
        if (r == true) {
            RestMaster.delRecFromList(entDetails.name, curRecord.id, $scope.records, index);
            $scope.statusMessage = "Record Successfully Deleted" + curRecord.id;
        }
    };
    $scope.cancelDialog = function() {
        $location.path("/" + entDetails.name.toLowerCase());
        $location.replace();
    };
    $scope.bulkDelete = function() {
        var selectedItems = [];
        var selIdx = [];
        for (var i in $scope.records) {
            var aRecord = $scope.records[i];
            if (aRecord.selected) {
                selectedItems.push(aRecord.id);
            }
        }
        if (selectedItems.length > 0) {
            //var listState = entDetails.name.charAt(0).toUpperCase() + entDetails.name.slice(1);
            RestMaster.bulkDelete(entDetails.name, selectedItems, $scope.records);
            //timeout to allow hibernate to flush records at backend
            $timeout(function() {
                $scope.records = RestMaster.listRecords(entDetails.name);
            }, 1e3);
            $scope.statusMessage = "Records Deleted Successfully";
        }
    };
    $scope.$watch("isSelectAll", function(newVal) {
        for (var i in $scope.records) {
            $scope.records[i].selected = $scope.isSelectAll;
        }
        $scope.disabledel = !$scope.isSelectAll;
    });
    $scope.isChkBoxSelected = function(isSel) {
        if ($scope.isSelectAll) return;
        $scope.disabledel = isSel;
    };
    $scope.isListEmpty = function() {
        return $scope.disabledel;
    };
} ]);

/*   VIEW CONTROLLER */
Application.shared.controller("RecViewController", [ "$scope", "$stateParams", "RestMaster", "entDetails", function($scope, $stateParams, RestMaster, entDetails) {
    $scope.record;
    if (!$scope.record) {
        $scope.record = RestMaster.getRecord(entDetails.name, $stateParams.id);
    }
    $scope.viewRecord = function() {
        alert("ViewRecord callled for" + entDetails.name + $stateParams.id);
        $scope.record = RestMaster.getRecord(entDetails.name, $stateParams.id);
    };
    $scope.save = function() {
        //var viewUrl = "/view_supplier/";
        var viewState = entDetails.name + ".view";
        $scope.status = RestMaster.updateRecord(entDetails.name, $stateParams.id, $scope.record, viewState);
    };
    $scope.delete = function() {
        var listState = entDetails.name;
        $scope.status = RestMaster.delRecord(entDetails.name, $scope.record.id, listState);
    };
} ]);

"use strict";

//This service represents the ServierSide Paging of Jquery datatable but this is not upkept
//with the logic and needs to be tested more thorughtly
//servers side has been added though
Application.shared.controller("ListServerPagingCtrl", [ "$scope", "$location", "$timeout", "RestMaster", "entDetails", "$http", "$compile", function($scope, $location, $timeout, RestMaster, entDetails, $http, $compile) {
    $scope.dtable = new Object();
    //placeholder for the jquery datatable object
    $scope.options = {
        bProcessing: true,
        bServerSide: true,
        bJQueryUI: true,
        sAjaxSource: "/rest/candidates",
        sPaginationType: "full_numbers",
        iDisplayLength: 10,
        //this would be the params.max value
        bInfo: true,
        bFilter: true,
        aoColumns: [ {
            aTargets: [ "mycol1" ],
            mData: "id",
            mRender: function(id, type, full) {
                return '<span ><input type="checkbox" ng-click="isChkBoxSelected(' + id + ') " ></span> ';
            }
        }, {
            mData: "name",
            aTargets: [ "mycol2" ],
            mRender: function(name, type, full) {
                return '<a href="' + name + '">' + name + "</a>";
            }
        }, {
            mData: "id",
            aTargets: [ "mycol3" ],
            mRender: function(id, type, full) {
                return '  <div class="supplierAction">                                      <a class="iconfa-eye-open" ui-sref="Vendors.view({id:' + id + '})" ></a>                                     <a class="iconfa-edit" ui-sref="Vendors.edit({id:' + id + '})"></a>                                     <a class="iconfa-trash" ng-click="deleteRec(' + id + ')" data-toggle="modal"></a>                                     </div>';
            }
        } ],
        fnRowCallback: function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            jQuery("td:eq(0)", nRow).addClass("aligncenter");
            jQuery("td:eq(1),td:eq(2),td:eq(3)", nRow).addClass("avo-light");
        },
        oLanguage: {
            sSearch: "Search all columns:"
        }
    };
    $scope.options.fnCreatedRow = function(nRow, aData, iDataIndex) {
        $compile(nRow)($scope);
    };
    $scope.deleteRec = function(id) {
        var r = confirm("Delete Record with ID-> " + id);
        $scope.statusMessage = "";
        if (r == true) {
            RestMaster.delRowFromDataTable("candidates", id, $scope.dtable);
            $scope.statusMessage = "Record Successfully Deleted" + id;
        }
    };
    //bulk delete logic
    // $scope.init = function(){
    //    $scope.isSelectAll = false;
    //    $scope.disabledel = true
    // }
    $scope.isChkBoxSelected = function(rowObj) {};
    $scope.isListEmpty = function() {
        return $scope.disabledel;
    };
} ]);

Application.shared.controller("BulkRecDeleteCtrl", [ "$scope", "RestMaster", "model", function($scope, RestMaster, model) {
    $scope.entDetails = model.entDetails;
    $scope.selectedItems = model.selectedItems;
    $scope.submit = function(successFn) {
        console.log("entDetails" + $scope.entDetails.name + "selItems" + $scope.selectedItems);
        RestMaster.bulkDelete($scope.entDetails.name, $scope.selectedItems).$promise.then(function() {
            toastr.success("Delete Records Successfully.");
            //TBD not working
            successFn();
        });
    };
} ]);

Application.shared.controller("ListClientPagingCtrl", [ "$scope", "$location", "$timeout", "RestMaster", "entDetails", "tableDataService", "$http", "$compile", "createDialog", "genericModules", function($scope, $location, $timeout, RestMaster, entDetails, tableDataService, $http, $compile, createDialog, genericModules) {
    $scope.selectedItems = [];
    $scope.checkedRows = [];
    $scope.options = tableDataService.getOTableOptions(entDetails.name);
    $scope.options.fnCreatedRow = function(nRow, aData, iDataIndex) {
        $compile(nRow)($scope);
    };
    $scope.deleteRec = function(id) {
        var r = confirm("Delete Record with ID-> " + id);
        $scope.statusMessage = "";
        if (r == true) {
            RestMaster.delRecFromList(entDetails.name, id, $scope.options.aaData, 1);
            $scope.statusMessage = "Record Successfully Deleted" + id;
        }
    };
    //bulk delete logic
    $scope.init = function() {
        $scope.isSelectAll = false;
        $scope.disabledel = true;
        $scope.options.aaData = RestMaster.listRecords(entDetails.name);
    }();
    $scope.isChkBoxSelected = function(id) {
        console.log("cehckbox select" + id);
        var isAdded = false;
        for (var i in $scope.selectedItems) {
            var aId = $scope.selectedItems[i];
            if (aId == id) {
                $scope.selectedItems.splice(i, 1);
                isAdded = true;
            }
        }
        if (!isAdded) {
            $scope.selectedItems.push(id);
        }
        if (!$scope.isSelectAll) {
            if ($scope.selectedItems.length > 0) {
                $scope.disabledel = false;
            } else {
                $scope.disabledel = true;
            }
        }
        console.log("selected items list" + $scope.selectedItems + "and disabledel val is" + $scope.disabledel);
    };
    $scope.isListEmpty = function() {
        return $scope.disabledel;
    };
    $scope.bulkDelete = function() {
        var totalRec = $scope.selectedItems.length;
        createDialog(genericModules.deleteDialog, {
            id: "deleteVendorDialog",
            title: genericModules.deleteDialogTitle,
            backdrop: true,
            controller: "BulkRecDeleteCtrl",
            success: {
                label: "Delete ",
                fn: function() {
                    //$scope.billtos.splice(index, 1);
                    //updateHasBilltos();
                    console.log("delte needs to be worked on");
                    //timeout to allow hibernate to flush records at backend
                    $timeout(function() {
                        $scope.options.aaData = RestMaster.listRecords(entDetails.name);
                        $scope.isSelectAll = false;
                        $scope.processCheckAll();
                    }, 1e3);
                }
            }
        }, {
            model: {
                selectedItems: $scope.selectedItems,
                entDetails: entDetails
            }
        });
    };
    $scope.$watch("searchText", function(val) {
        if (undefined == val) return;
        //search only on the column one fo the list
        window.oTable.fnFilter(val, 1);
    });
    $scope.$watch("isSelectAll", function(newVal) {
        $scope.processCheckAll();
    });
    $scope.processCheckAll = function() {
        console.log("processCheckAll called");
        //var oSettings = window.oTable.fnSettings()
        //console.log(oSettings)
        //var len = oSettings._iDisplayLength
        jQuery.each($scope.options.aaData, function(index, value) {
            // jQuery.each(window.oTable.fnSettings().aoData, function( index, value ) {
            console.log("value is" + value.id);
            $scope.checkedRows[value.id] = $scope.isSelectAll;
            $scope.selectedItems.push(value.id);
        });
        $scope.disabledel = !$scope.isSelectAll;
        //add ids to the selectedItems based on selection
        if (!$scope.isSelectAll) {
            $scope.selectedItems = [];
        }
        console.log("Selected Checkbox " + $scope.selectedItems);
    };
} ]);

Application.shared.factory("sharedService", [ "$cookieStore", "$http", "appConstants", function($cookieStore, $http, appConstants) {
    return {
        autoComplete: function(val) {
            var baseurl = appConstants.baseUrl + "geo/findByCityOrZip?q=";
            var authCode = $cookieStore.get("authCode");
            var url = baseurl + val + "&token=" + authCode;
            return $http.get(url);
        }
    };
} ]);

Application.shared.directive("ngDeleteItemFromList", function() {
    return {
        restrict: "EA",
        templateUrl: "shared/deleteModalDialogForList.html",
        require: "^ngEntity",
        scope: {
            ngEntity: "@",
            bulkDelete: "&",
            cancel: "&"
        }
    };
});
//# sourceMappingURL=web-app/assets/sources.min.js.map