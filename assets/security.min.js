/*! iconsult 03-02-2014 version: 1.0.0 
 author: https://twitter.com/MakBkar */

var Application = Application || {};

Application.Security = angular.module("iconsult.security", []);

Application.Security.controller("SecurityLoginCtrl", function($scope, $rootScope, $state, $cookieStore, securityService, authService, RestMaster, routerStates) {
    $scope.user = {};
    $scope.init = function() {
        var data = "login screen is on";
        if ($state.current.name === routerStates.home) {
            //check if user is already logged in
            var aCode = $cookieStore.get("authCode");
            if (aCode.length > 13) {
                $state.go(routerStates.Candidates);
            } else {
                $scope.user.username = $cookieStore.get("username");
                $rootScope.$broadcast("event:auth-invalidlogin");
            }
        }
    }();
    $scope.submit = function(successFn) {
        $scope.resp = securityService.signIn($scope.user);
        //Auth code is alwaysof 15 digits
        $scope.resp.$promise.then(function(data) {
            data.username = $scope.user.username;
            var myauth;
            //calculate authcode
            for (var i = 0; i < 16; i++) {
                if (typeof myauth == "undefined") myauth = data[i]; else myauth = myauth + data[i];
            }
            RestMaster.updateAuthCode(myauth);
            $cookieStore.put("authCode", myauth);
            $cookieStore.put("username", data.username);
            $cookieStore.put("status", "");
            if (typeof successFn !== "undefined") successFn(data); else $state.go(routerStates.Candidates);
            authService.loginConfirmed();
        });
    };
});

Application.Security.controller("SecurityCtrl", function($scope, $state, securityService, routerStates, $cookieStore) {
    $scope.logout = function() {
        $scope.resp = securityService.signOut();
        $scope.resp.$promise.then(function(data) {
            $cookieStore.put("authCode", "");
            $cookieStore.put("username", "");
            $cookieStore.put("status", "Enter your credentials");
            console.log("user logged out");
            $scope.isLoggedIn = false;
            $state.go(routerStates.home);
        });
    };
});

/**
* This directive will find itself inside HTML as a class,
* and will remove that class, so CSS will remove loading image and show app content.
* It is also responsible for showing/hiding login form.
*/
Application.Security.directive("securityAuthHandler", function(showDialog, securityDialogs, $state, routerStates) {
    return {
        restrict: "C",
        link: function(scope, elem, attrs) {
            //once Angular is started, remove class:
            elem.removeClass("waiting-for-angular");
            scope.$on("event:auth-loginRequired", function() {
                if ($state.current.name === routerStates.home) {
                    alert("Invalid Login Credentials!! Please try again");
                } else {
                    showDialog(securityDialogs.loginDialog(), {
                        user: {}
                    });
                }
            });
            scope.$on("event:auth-loginConfirmed", function() {});
        }
    };
});

Application.Security.service("securityDialogs", function($http, $rootScope, authService, $cookieStore, RestMaster, $state) {
    var self = this;
    /*Data
     "access_token":"boQtj0SCGz2GFGz[...]",
    "token_type":"bearer",
    "expires_in":1209599,
    "userName":"Alice",
    ".issued":"Mon, 14 Oct 2013 06:53:32 GMT",
    ".expires":"Mon, 28 Oct 2013 06:53:32 GMT"
    */
    this.loginSuccess = function(data) {
        //reload the current state
        $state.go(".", {
            q: "TT"
        }, {
            reload: true
        });
    };
    return {
        loginDialog: function() {
            return {
                name: "Login",
                module: "User",
                templateUrl: "security/security.loginDialog.html",
                controller: "SecurityLoginCtrl",
                message: "User successfully logged in",
                successFn: function(data) {
                    self.loginSuccess(data);
                }
            };
        }
    };
});

Application.Security.factory("securityService", [ "$resource", "$http", "appConstants", "$cookieStore", function($resource, $http, appConstants, $cookieStore) {
    return {
        signIn: function(data) {
            return $resource(appConstants.baseUrl + "rest/auth").get(data);
        },
        signOut: function() {
            var username = $cookieStore.get("username");
            var params = {
                username: username
            };
            return $resource(appConstants.baseUrl + "auth/logout").get(params);
        }
    };
} ]);
//# sourceMappingURL=web-app/assets/sources.min.js.map