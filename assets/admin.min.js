/*! iconsult 12-03-2014 version: 1.0.0 
 author: https://twitter.com/MakBkar */

var Application = Application || {};

Application.admin = angular.module("iconsult.admin", []);

Application.admin.factory("adminService", [ "$resource", "$cookieStore", "$http", "appConstants", function($resource, $cookieStore, $http, appConstants) {
    return {
        signIn: function(data) {
            return $resource(appConstants.baseUrl + "rest/auth").get(data);
        },
        signOut: function() {
            var username = $cookieStore.get("username");
            var params = {
                username: username
            };
            return $resource(appConstants.baseUrl + "auth/logout").get(params);
        },
        jumpToContact: function(val) {
            var baseurl = appConstants.baseUrl + "rest/jump?q=";
            var authCode = $cookieStore.get("authCode");
            var url = baseurl + val + "&token=" + authCode;
            return $http.get(url);
        }
    };
} ]);

"use strict";

Application.admin.controller("LoginController", [ "$scope", "authService", "adminService", "$cookieStore", "RestMaster", "$rootScope", function($scope, authService, adminService, $cookieStore, RestMaster, $rootScope) {
    $scope.init = function() {
        var data = "login screen is on";
        $rootScope.$broadcast("event:auth-invalidlogin");
    }();
    $scope.submit = function() {
        var postData = {
            username: $scope.username,
            password: $scope.password
        };
        $scope.resp = adminService.signIn(postData);
        //Auth code is alwaysof 15 digits
        $scope.resp.$promise.then(function(data) {
            var myauth;
            for (var i = 0; i < 16; i++) {
                if (typeof myauth == "undefined") myauth = data[i]; else myauth = myauth + data[i];
            }
            console.log("authcode is here" + myauth);
            RestMaster.updateAuthCode(myauth);
            $cookieStore.put("authCode", myauth);
            $cookieStore.put("username", $scope.username);
            $cookieStore.put("status", "");
            authService.loginConfirmed();
        });
    };
} ]);

/*******START OF parentviewcontroller.js*******/
"use strict";

Application.admin.controller("ParentViewController", [ "$scope", "$cookieStore", "$state", "adminService", "$http", function($scope, $cookieStore, $state, adminService, $http) {
    $scope.isLoggedIn = true;
    $scope.$on("event:auth-invalidlogin", function() {
        $scope.isLoggedIn = false;
    });
    $scope.$on("event:auth-loginConfirmed", function() {
        $scope.isLoggedIn = true;
    });
    $scope.isValidUser = function() {
        return $scope.isLoggedIn;
    };
    $scope.logout = function() {
        $scope.resp = adminService.signOut();
        $scope.resp.$promise.then(function(data) {
            $cookieStore.put("authCode", "");
            $cookieStore.put("username", "");
            $cookieStore.put("status", "Enter your credentials");
            console.log("user logged out");
            $scope.isLoggedIn = false;
            $state.go("login");
        });
    };
    $scope.autoFillJump = function(val) {
        return adminService.jumpToContact(val).then(function(res) {
            var addresses = [];
            angular.forEach(res.data, function(item) {
                addresses.push(item.label);
            });
            return addresses;
        });
    };
} ]);

"use strict";

Application.admin.controller("MyTestController", [ "$scope", "$cookieStore", "$state", "signOutService", "$http", "createDialog", "genericModules", function($scope, $cookieStore, $state, signOutService, $http, createDialog, genericModules) {
    $scope.isLoggedIn = true;
    $scope.parentTest = "hello khushi, how do u do i am fine how 'bout you? ";
    $scope.selected = undefined;
    $scope.states = [ "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Dakota", "North Carolina", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming" ];
    $scope.awesomeFunc = function() {
        toastr.options.closeButton = true;
        toastr.success("Did you see Khushi's Awesomeness");
    };
    $scope.getLocation = function(val) {
        return $http.get("http://maps.googleapis.com/maps/api/geocode/json", {
            params: {
                address: val,
                sensor: false
            }
        }).then(function(res) {
            var addresses = [];
            angular.forEach(res.data.results, function(item) {
                addresses.push(item.formatted_address);
            });
            window.myaddr2 = addresses;
            return addresses;
        });
    };
    $scope.autoFillLocation = function(val) {
        var baseurl = "/geo/findByCityOrZip?q=";
        var authCode = $cookieStore.get("authCode");
        var url = baseurl + val + "&token=" + authCode;
        return $http.get(url).then(function(res) {
            var addresses = [];
            angular.forEach(res.data, function(item) {
                addresses.push(item);
            });
            return addresses;
        });
    };
    $scope.launchDateDialog = function() {
        createDialog(genericModules.dateDialog, {
            id: "testDateDialog",
            title: genericModules.deleteDialogTitle,
            backdrop: true,
            controller: "DialogTestCtrl",
            success: {
                label: "Submit ",
                fn: function() {
                    toastr.success("Dialog Records Successful.");
                }
            }
        }, {
            model: {
                selectedItems: "test"
            }
        });
    };
    $scope.today = function() {
        $scope.dt = new Date();
    };
    $scope.today();
    $scope.showWeeks = true;
    $scope.toggleWeeks = function() {
        $scope.showWeeks = !$scope.showWeeks;
    };
    $scope.clear = function() {
        $scope.dt = null;
    };
    // Disable weekend selection
    $scope.disabled = function(date, mode) {
        return mode === "day" && (date.getDay() === 0 || date.getDay() === 6);
    };
    $scope.toggleMin = function() {
        $scope.minDate = $scope.minDate ? null : new Date();
    };
    $scope.toggleMin();
    $scope.open = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.opened = true;
    };
    $scope.dateOptions = {
        "year-format": "'yy'",
        "starting-day": 1
    };
    $scope.formats = [ "dd-MMMM-yyyy", "yyyy/MM/dd", "shortDate" ];
    $scope.format = $scope.formats[0];
} ]);

Application.admin.controller("DialogTestCtrl", [ "$scope", "model", function($scope, model) {
    $scope.simpleVar = "test passed";
    $scope.submit = function(successFn) {
        successFn();
    };
    $scope.today = function() {
        $scope.dt = new Date();
    };
    $scope.today();
    $scope.showWeeks = true;
    $scope.toggleWeeks = function() {
        $scope.showWeeks = !$scope.showWeeks;
    };
    $scope.clear = function() {
        $scope.dt = null;
    };
    // Disable weekend selection
    $scope.disabled = function(date, mode) {
        return mode === "day" && (date.getDay() === 0 || date.getDay() === 6);
    };
    $scope.toggleMin = function() {
        $scope.minDate = $scope.minDate ? null : new Date();
    };
    $scope.toggleMin();
    $scope.open = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.opened = true;
    };
    $scope.dateOptions = {
        "year-format": "'yy'",
        "starting-day": 1
    };
    $scope.formats = [ "dd-MMMM-yyyy", "yyyy/MM/dd", "shortDate" ];
    $scope.format = $scope.formats[0];
} ]);

Application.admin.directive("ngSparkline", function() {
    return {
        restrict: "A",
        require: "^ngCity",
        scope: {
            ngCity: "@"
        },
        template: "<h4>Weather for city {{ngCity}}</h4>"
    };
});

Application.admin.directive("ngSparkstatus", function($parse) {
    return {
        restrict: "A",
        require: "^ngModel",
        scope: {
            model: "=ngModel"
        },
        template: '<span id="hstatus">{{model}}</span>',
        link: function(scope, iElement, iAttrs) {
            scope.$watch("model", function(newVal) {
                jQuery("#hstatus").show();
                jQuery("#hstatus").delay(5e3).fadeOut(300);
            });
        }
    };
});

Application.admin.directive("ngListheader", [ function() {
    return {
        restrict: "EA",
        require: "^ngEntity",
        scope: {
            ngEntity: "@",
            isListEmpty: "&",
            bulkDelete: "&",
            searchText: "@"
        },
        templateUrl: "shared/list.header.html",
        controller: function($scope) {
            $scope.filterView = function(links) {
                if (links == 1) {
                    document.getElementById("text").style.display = "none";
                    document.getElementById("newselect").style.display = "block";
                    document.getElementById("click").style.display = "none";
                    document.getElementById("click1").style.display = "block";
                } else if (links == 2) {
                    document.getElementById("text").style.display = "block";
                    document.getElementById("newselect").style.display = "none";
                    document.getElementById("click").style.display = "block";
                    document.getElementById("click1").style.display = "none";
                }
            };
        }
    };
} ]);

/**
* This directive will find itself inside HTML as a class,
* and will remove that class, so CSS will remove loading image and show app content.
* It is also responsible for showing/hiding login form.
*/
Application.admin.directive("authDemoApplication", [ "$state", "$cookieStore", function($state, $cookieStore) {
    return {
        restrict: "C",
        link: function(scope, elem, attrs) {
            //once Angular is started, remove class:
            elem.removeClass("waiting-for-angular");
            //var login = elem.find('#login-holder');
            //var main = elem.find('#content');
            //login.hide();
            scope.$on("event:auth-loginRequired", function() {
                if ($state.current.name == "login") {
                    alert("Invalid Credentials , Login again");
                    $cookieStore.put("status", "Invalid Credentials, Login Again");
                } else {
                    alert("Enter User Credentials ");
                    $cookieStore.put("status", "Enter Credentials");
                }
                $state.go("login");
            });
            scope.$on("event:auth-loginConfirmed", function() {
                // main.show();
                // login.slideUp();
                $state.go("Candidates.list");
            });
        }
    };
} ]);
//# sourceMappingURL=web-app/assets/sources.min.js.map